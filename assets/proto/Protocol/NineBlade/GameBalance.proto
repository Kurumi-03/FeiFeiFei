syntax = "proto3";

package RichServer.Protocol.NineBlade;

// 結算畫面的同步點
message GameBalanceState {

  message Seat {
    int32 SeatId = 1;               // 玩家座位 1 ~ MaxSeats
    string Nickname = 2;            // 每個座位的暱稱，空坐位為空字串
    double GPoint = 3;               // 每個座位的遊戲點數，空坐位為0
    double BetPt = 4;                // 押注點數
    double WinPt = 5;                // 贏點
  }

  repeated Seat SeatsData = 1;      // 每個座位的資料  (從第一位開始，所以會有6筆，以下資料相同對應)
  int32 Maintenance = 2;             // 局結束後是否進行維護(0:無維護 1:即將維護 2:餘額已達封頂值 3:玩家已經被禁止遊戲)
}

message GameBalanceSyncPoint {
  int32 SeatId = 1;             // 自己的座位 -1 表示沒坐下
  double MinBet = 2;             // 最小押注
  double TotBet = 3;             // 目前總注
  int32 WatchOn = 4;            // 0:正常 1:觀戰
  int32 TimeLeft = 5;           // 結算剩餘時間
  Winners Winner = 6;            // 贏家資料
  repeated Seat SeatsData = 7;   // 每個座位的資料  (從第一位開始，所以會有6筆，以下資料相同對應)
  int32 Maintenance = 8;         // 局結束後是否進行維護(0:無維護 1:即將維護 2:餘額已達封頂值 3:玩家已經被禁止遊戲)

  message Seat {
    int32 SeatId = 1;         // 玩家座位 1 ~ MaxSeats
    string Nickname = 2;      // 每個座位的暱稱，空坐位為空字串
    double GPoint = 3;         // 每個座位的遊戲點數，空坐位為0
    double BetPt = 4;          // 押注點數
    double WinPt = 5;          // 贏點
    repeated Hand Hands = 6;  // 牌相關
  }

  message Hand {
    int32 HandType = 1;         // 前墩
    int32 HandSubType = 2;      // 後墩
    repeated int32 Cards = 3;   //1-5妞妞 6.7前墩 8.9後墩
  }

  message Winners{
    int32 frontWinSeatId = 1;
    int32 backWinSeatId = 2;
    int32 LastWinSeatId = 3;
  }
}
